name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: repo.wheeler-network.com
  IMAGE_NAME: mcp-server

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install UV
        run: pip install uv

      - name: Install dependencies
        run: |
          cd mcp-server
          uv sync --extra dev --frozen

      - name: Run linting
        run: |
          cd mcp-server
          uv run ruff check .
          uv run ruff format --check .

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install UV
        run: pip install uv

      - name: Install dependencies
        run: |
          cd mcp-server
          uv sync --extra dev --frozen

      - name: Run security scan
        run: |
          cd mcp-server
          uv run bandit -r . -f json -o bandit-report.json || true
          uv run safety check

      - name: Upload bandit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-report
          path: mcp-server/bandit-report.json

  publish-to-registry:
    runs-on: ubuntu-latest
    needs: [lint, security-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker Registry login
        run: curl -v -u ${{ secrets.REPO_USER }}:${{ secrets.REPO_PASS }} https://repo.wheeler-network.com/v2/_catalog || true

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPO_USER }}
          password: ${{ secrets.REPO_PASS }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./mcp-server
          file: ./mcp-server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
